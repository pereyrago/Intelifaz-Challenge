[{"C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\index.js":"1","C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\App.js":"2","C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\components\\UserList\\index.jsx":"3","C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\components\\CreateUser\\index.jsx":"4","C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\components\\UserDetail\\index.jsx":"5"},{"size":219,"mtime":1609814150194,"results":"6","hashOfConfig":"7"},{"size":4882,"mtime":1609821336592,"results":"8","hashOfConfig":"7"},{"size":1220,"mtime":1609815447401,"results":"9","hashOfConfig":"7"},{"size":3717,"mtime":1609818887971,"results":"10","hashOfConfig":"7"},{"size":901,"mtime":1609800483581,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"14zrgw8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\index.js",[],["24","25"],"C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\App.js",[],"C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\components\\UserList\\index.jsx",[],"C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\components\\CreateUser\\index.jsx",[],"C:\\Users\\perey\\Desktop\\repo\\Intelifaz-Challenge\\src\\components\\UserDetail\\index.jsx",["26"],"import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst UserDetail = ({ user, closeUser }) => {\r\n  return (\r\n    <div className=\"userCont\">\r\n      <div className=\"cardCont\">\r\n        <div className=\"buttonCont\">\r\n          <button className=\"button\" onClick={() => closeUser()}>\r\n            x\r\n          </button>\r\n        </div>\r\n        <img\r\n          className=\"userImg\"\r\n          src={\r\n            !user.file\r\n              ? \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn.iconscout.com%2Ficon%2Ffree%2Fpng-256%2Favatar-375-456327.png&f=1&nofb=1\"\r\n              : typeof user.file === \"string\"\r\n              ? user.file\r\n              : URL.createObjectURL(user.file)\r\n          }\r\n        />\r\n        <p>{`${user.firstName} ${user.lastName}`}</p>\r\n        <p>{user.email}</p>\r\n        <p>{user.tel}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default UserDetail;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":14,"column":9,"nodeType":"33","endLine":23,"endColumn":11},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]